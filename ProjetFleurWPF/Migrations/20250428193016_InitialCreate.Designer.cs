// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetFleurWPF.Data;

#nullable disable

namespace ProjetFleurWPF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428193016_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetFleurWPF.Models.Bouquet", b =>
                {
                    b.Property<int>("BouquetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("BouquetId");

                    b.ToTable("Bouquets");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.BouquetPreconfigure", b =>
                {
                    b.Property<int>("BouquetPreconfigureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetPreconfigureId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("BouquetPreconfigureId");

                    b.ToTable("BouquetsPreconfigures");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessagePersonnalise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<string>("MoyenPaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCommande")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutPaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.HasKey("CommandeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VendeurId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.CommandeFournisseur", b =>
                {
                    b.Property<int>("CommandeFournisseurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeFournisseurId"));

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomFleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommandeFournisseurId");

                    b.ToTable("CommandesFournisseurs");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.CommandeProduit", b =>
                {
                    b.Property<int>("CommandeProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeProduitId"));

                    b.Property<int?>("BouquetId")
                        .HasColumnType("int");

                    b.Property<int?>("BouquetPreconfigureId")
                        .HasColumnType("int");

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<int?>("FleurId")
                        .HasColumnType("int");

                    b.HasKey("CommandeProduitId");

                    b.HasIndex("BouquetId");

                    b.HasIndex("BouquetPreconfigureId");

                    b.HasIndex("CommandeId");

                    b.HasIndex("FleurId");

                    b.ToTable("CommandeProduits");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactureId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessagePersonnalise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<string>("MoyenPaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactureId");

                    b.HasIndex("CommandeId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Fleur", b =>
                {
                    b.Property<int>("FleurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FleurId"));

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("FleurId");

                    b.ToTable("Fleurs");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.FleurBouquet", b =>
                {
                    b.Property<int>("FleurBouquetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FleurBouquetId"));

                    b.Property<int>("BouquetId")
                        .HasColumnType("int");

                    b.Property<int>("FleurId")
                        .HasColumnType("int");

                    b.HasKey("FleurBouquetId");

                    b.HasIndex("BouquetId");

                    b.HasIndex("FleurId");

                    b.ToTable("FleurBouquets");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.FleurBouquetPreconfigure", b =>
                {
                    b.Property<int>("FleurBouquetPreconfigureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FleurBouquetPreconfigureId"));

                    b.Property<int>("BouquetPreconfigureId")
                        .HasColumnType("int");

                    b.Property<int>("FleurId")
                        .HasColumnType("int");

                    b.HasKey("FleurBouquetPreconfigureId");

                    b.HasIndex("BouquetPreconfigureId");

                    b.HasIndex("FleurId");

                    b.ToTable("FleurBouquetPreconfigures");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FournisseurId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FournisseurId");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Proprietaire", b =>
                {
                    b.Property<int>("ProprietaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProprietaireId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProprietaireId");

                    b.ToTable("Proprietaires");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Vendeur", b =>
                {
                    b.Property<int>("VendeurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendeurId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendeurId");

                    b.ToTable("Vendeurs");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Commande", b =>
                {
                    b.HasOne("ProjetFleurWPF.Models.Client", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFleurWPF.Models.Vendeur", "Vendeur")
                        .WithMany("Commandes")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Vendeur");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.CommandeProduit", b =>
                {
                    b.HasOne("ProjetFleurWPF.Models.Bouquet", "Bouquet")
                        .WithMany()
                        .HasForeignKey("BouquetId");

                    b.HasOne("ProjetFleurWPF.Models.BouquetPreconfigure", "BouquetPreconfigure")
                        .WithMany()
                        .HasForeignKey("BouquetPreconfigureId");

                    b.HasOne("ProjetFleurWPF.Models.Commande", "Commande")
                        .WithMany("CommandeProduits")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFleurWPF.Models.Fleur", "Fleur")
                        .WithMany()
                        .HasForeignKey("FleurId");

                    b.Navigation("Bouquet");

                    b.Navigation("BouquetPreconfigure");

                    b.Navigation("Commande");

                    b.Navigation("Fleur");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Facture", b =>
                {
                    b.HasOne("ProjetFleurWPF.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.FleurBouquet", b =>
                {
                    b.HasOne("ProjetFleurWPF.Models.Bouquet", "Bouquet")
                        .WithMany("FleurBouquets")
                        .HasForeignKey("BouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFleurWPF.Models.Fleur", "Fleur")
                        .WithMany()
                        .HasForeignKey("FleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouquet");

                    b.Navigation("Fleur");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.FleurBouquetPreconfigure", b =>
                {
                    b.HasOne("ProjetFleurWPF.Models.BouquetPreconfigure", "BouquetPreconfigure")
                        .WithMany("FleurBouquetPreconfigures")
                        .HasForeignKey("BouquetPreconfigureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetFleurWPF.Models.Fleur", "Fleur")
                        .WithMany()
                        .HasForeignKey("FleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BouquetPreconfigure");

                    b.Navigation("Fleur");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Bouquet", b =>
                {
                    b.Navigation("FleurBouquets");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.BouquetPreconfigure", b =>
                {
                    b.Navigation("FleurBouquetPreconfigures");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Client", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Commande", b =>
                {
                    b.Navigation("CommandeProduits");
                });

            modelBuilder.Entity("ProjetFleurWPF.Models.Vendeur", b =>
                {
                    b.Navigation("Commandes");
                });
#pragma warning restore 612, 618
        }
    }
}
